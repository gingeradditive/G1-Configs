############################### mainsail.cfg #######################################
#
# - This file is used to define the system macro.
# 
################################################################################

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  M106 S0
  # clear pause_next_layer and pause_at_layer as preparation for next print
  CANCEL_PRINT_BASE


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  {% set temp1 = printer.extruder.target %}
  {% set temp2 = printer.extruder1.target %}
  {% set temp3 = printer.extruder2.target %}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'temp1': temp1,'temp2': temp2,'temp3': temp3}}" 
  
  _GINGER_EXTRUDER_SHUTDOWN
  PAUSE_BASE


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'temp1': 0,'temp2': 0,'temp3': 0}
gcode:
  {% set sp_move = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set can_extrude = printer.extruder.can_extrude && printer.extruder1.can_extrude && printer.extruder2.can_extrude %} # status of active extruder
  {% set do_resume = False %}
  {% set prompt_txt = [] %}
  
  #### Printer comming from timeout idle state ####
  {% if printer.idle_timeout.state|upper == "IDLE" %}
  RESPOND TYPE=echo MSG="Restoring temperatures to: temp1=%3.1f\u00B0C, temp2=%3.1f\u00B0C, temp3=%3.1f\u00B0C. This may take some time" % (last_extruder_temp.temp1, last_extruder_temp.temp2, last_extruder_temp.temp3)
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={last_extruder_temp.temp1-10} MAXIMUM={last_extruder_temp.temp1+10}
  TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={last_extruder_temp.temp2-10} MAXIMUM={last_extruder_temp.temp2+10}
  TEMPERATURE_WAIT SENSOR=extruder2 MINIMUM={last_extruder_temp.temp3-10} MAXIMUM={last_extruder_temp.temp3+10}
  {% set do_resume = True %}

  #### Printer comming out of regular PAUSE state ####
  {% elif can_extrude %}
    {% set do_resume = True %}
  {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! extruders not hot enough, please heat up again and press RESUME"}'
    {% set _d = prompt_txt.append("extruders not hot enough, please heat up again and press RESUME") %}
  {% endif %}

  {% if do_resume %}
    RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
  {% endif %}

  ##### Generate User Information box in case of abort #####
  {% if not (runout_resume and do_resume) %} 
    RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
    {% for element in prompt_txt %}
      RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}' 
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}